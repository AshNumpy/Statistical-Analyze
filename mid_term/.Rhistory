#9.11 Testing a proportion:
# H0: Q = 50.000
# Hs: Q > 50.000 {geliri 50.000 den fazla olanları bulmak için kurduğumuz seçenek hipotezi}
prop.test(173,300,p=0.5,alternative="greater")
data_sample[data_sample$Income>50000]
data_sample[data_sample$Income>50000,]
data_sample[data_sample$Income>50000,][,Income]
prop.test(data_sample[data_sample$Income>50000,][,data_sample$Income])
data_sample[data_sample$Income>50000,][,data_sample$Income]
#9.12 Comparing the Locations of Two Samples Nonparametrically:
sample_1 <- data_sample$MntMeatProducts
sample_2 <- data_sample$MntFishProducts
#9.12 Comparing the Locations of Two Samples Nonparametrically:
sample_1 <- as.data.frame(list(data_sample$MntMeatProducts))
sample_2 <- as.data.frame(list(data_sample$MntFishProducts))
sample_1
library(dplyr)  #verileri manipüle edebilmek için kullandık
colnames(sample_1) <- income
colnames(sample_1) <- c("income")
colnames(sample_2) <- c("income")
sample_2
shapiro.test(sample_1$income)
colnames(sample_1) <- c("meat")
colnames(sample_2) <- c("fish")
shapiro.test(sample_1$meat)
shapiro.test(sample_2$fish)
edit("C:\Users\lenovo\Desktop\Data_Camp\mpg.xlsx")
#H0: balık satışı ile et satışı arasında fark yoktur.
#Hs: balık satışı ile et satışı arasında fark vardır.
wilcox.test(sample_1,sample_2, alternative = "two.sided")
#H0: balık satışı ile et satışı arasında fark yoktur.
#Hs: balık satışı ile et satışı arasında fark vardır.
wilcox.test(sample_1$meat,sample_2$fish, alternative = "two.sided")
sample_meat <- as.data.frame(list(data_sample$MntMeatProducts))
colnames(sample_1) <- c("meat")
sample_fish <- as.data.frame(list(data_sample$MntFishProducts))
colnames(sample_2) <- c("fish")
shapiro.test(sample_meat$meat)#p<alpha=0.05 için normal dağılmıyor
shapiro.test(sample_fish$fish)#p<alpha=0.05 için normal dağılmıyor
#H0: balık satışı ile et satışı arasında fark yoktur.
#Hs: balık satışı ile et satışı arasında fark vardır.
wilcox.test(sample_1$meat,sample_2$fish, alternative = "two.sided")
#9.17 Testing a Correlation for Significance:
sample_wine <- data_sample$MntWines
#9.17 Testing a Correlation for Significance:
sample_wine <- as.data.frame(list(data_sample$MntWines))
colnames(sample_wine) <- c("wine")
sample_wine <- as.data.frame(list(data_sample$MntWines))
colnames(sample_wine) <- c("wine")
sample_income <- as.data.frame(list(data_sample$Income))
colnames(sample_income) <- c("income")
cor.test(sample_income,sample_wine)
cor.test(sample_income$income,sample_wine$wine)
#9.18 Testing Groups for Equal Proportions
data_sample[data_sample$Income>50000,]
#9.18 Testing Groups for Equal Proportions
data_sample[data_sample$Income>80000,] #
#9.18 Testing Groups for Equal Proportions
data_sample[data_sample$Income>60000,] #
#9.18 Testing Groups for Equal Proportions
data_sample[data_sample$NumWebPurchases>3,] #135
163/300
data_sample[data_sample$NumStorePurchases>5]
data_sample[data_sample$NumStorePurchases>5,]
143/300
#H0: Aylık web sitesi ziyaretinin 3 ten fazla olma olasılığı ile aylık dükkan ziyaretinin 5 ten fazla olma olasılığı eştittir.
#Hs: P~web~ < P~store~
prop.test(163,300,p=0.5)
prop.test(143,300,p=0.5)
#9.19 Performing Pairwise Comparisons Between Group Means
#H0: M1 = M2
#Hs: M1 != M2
sample_fruit <- data_sample[data_sample$MntFruits]
#9.19 Performing Pairwise Comparisons Between Group Means
#H0: M1 = M2
#Hs: M1 != M2
sample_fruit <- data_sample[data_sample$MntFruits,]
sample_sweet <- data_sample[data_sample$MntSweetProducts,]
pairwise.t.test(sample_fruit,sample_sweet)
sample_fruit
sample_wine
#9.19 Performing Pairwise Comparisons Between Group Means
#H0: M1 = M2
#Hs: M1 != M2
sample_fruit <- as.data.frame(list(data_sample$MntFruits))
sample_sweet <- as.data.frame(list(data_sample$MntSweetProducts))
pairwise.t.test(sample_fruit$,sample_sweet)
colnames(sample_fruit) <- c("fruit")
colnames(sample_fruit) <- c("sweet")
pairwise.t.test(sample_fruit,sample_sweet)
colnames(sample_fruit) <- c("fruit")
colnames(sample_sweet) <- c("sweet")
pairwise.t.test(sample_fruit$fruit,sample_sweet$sweet)
sample_sweet
sample_fruit
pairwise.t.test(sample_fruit$fruit,sample_sweet$sweet)
?pairwise.t.test
pairwise.t.test(sample_fruit$fruit,sample_sweet$sweet, alternative = "two.sided")
sample_fruit <- as.data.frame(list(sample(data_sample$MntFruits,30)))
colnames(sample_fruit) <- c("fruit")
sample_sweet <- as.data.frame(list(sample(data_sample$MntSweetProducts,30)))
colnames(sample_sweet) <- c("sweet")
pairwise.t.test(sample_fruit$fruit,sample_sweet$sweet, alternative = "two.sided")
pairwise.t.test(sample_fruit$fruit,sample_sweet$sweet, alternative = "two.sided")
pairwise.t.test(sample_fruit,sample_sweet, alternative = "two.sided")
pairwise.t.test(sample_fruit$fruit,sample_sweet$sweet, alternative = "two.sided")
pairwise.t.test(sample_fruit$fruit,sample_sweet$sweet, alternative = "two.sided")
pairwise.t.test(data_sample$MntMeatProducts,data_sample$MntFishProducts, alternative = "two.sided")
#9.20 Testing Two Samples for the Same Distribution
ks.test(data_sample$MntFishProducts,data_sample$MntFruits)
#9.20 Testing Two Samples for the Same Distribution
ks.test(data_sample$MntFishProducts,data_sample$MntFruits)
#9.20 Testing Two Samples for the Same Distribution
#H0: Dağılımlar aynıdır.
#Hs: Dağılımlar aynı değildir.
shapiro.test(data_sample$MntFruits)
shapiro.test(data_sample$MntFishProducts)
pairwise.t.test(data_sample$MntMeatProducts,data_sample$MntFishProducts, alternative = "two.sided")
data_sample
library(dplyr)  #verileri manipüle edebilmek için kullandık
kid_0_1 <- data_Sample$Kidhome[data_sample$Kidhome>0]
data_sample
kid_0_1 <- data_sample$Kidhome[data_sample$Kidhome>0]
kid_0_1 <- as.data.frame(list(data_sample$Kidhome[data_sample$Kidhome>0]))
View(kid_0_1)
colnames(kid_0_1) <- c("var_yok")
Data_sample %>%
add_column(kid_0_1=kid_0_1)
Data_sample %>%
add_column(kid_0_1=kid_0_1)
Data_sample %>%
add_colum(kid_0_1=kid_0_1)
?t.test
data_sample %>%
add_column(kid_0_1=kid_0_1)
data_sample %>%
mutate(kid_0_1=kid_0_1)
#Çocuk var yok sütunu ekleme:
kid_0_1 <- as.data.frame(list(ifelse(data_sample$Kidhome[data_sample$Kidhome>0],1,0)))
View(kid_0_1)
kid_0_1 <- as.data.frame(list(data_sample$Kidhome[data_sample$Kidhome>0]))
colnames(kid_0_1) <- c("var_yok")
View(kid_0_1)
#T testini yapabilmek için 36. satırdaki 3 değişkeni yokettik.
t.test(data_sample_30_dbl)
knitr::opts_chunk$set(echo = TRUE)
summary(data_sample)
summary(table(data_sample$MntWines,data_sample$MntFruits))
quantile(data_sample$Income, na.rm=T)
data_sample
knitr::opts_chunk$set(echo = TRUE)
#T testini yapabilmek için 36. satırdaki 3 değişkeni yokettik.
t.test(data_sample_30_dbl$Income)
prop.test(nrow(data_sample[data_sample$Income>50000,]),300,p=0.5,alternative="greater")
prop.test(nrow(data_sample[data_sample$Income>50000,]),nrow(data_Sample$Income),p=0.5,alternative="greater")
prop.test(nrow(data_sample[data_sample$Income>50000,]),nrow(data_sample$Income),p=0.5,alternative="greater")
prop.test(nrow(data_sample[data_sample$Income>50000,]),300,p=0.5,alternative="greater")
sample_meat <- as.data.frame(list(data_sample$MntMeatProducts))
colnames(sample_meat) <- c("meat")
sample_fish <- as.data.frame(list(data_sample$MntFishProducts))
colnames(sample_fish) <- c("fish")
wilcox.test(sample_meat$meat,sample_fish$fish, alternative = "two.sided") #p<0.05 için H0 reddedilir.
#H0: Aylık web sitesi ziyaretinin 3 ten fazla olma olasılığı ile aylık dükkan ziyaretinin 5 ten fazla olma olasılığı eştittir.
#Hs: P~web~ < P~store~
prop.test(nrow(data_sample[data_sample$NumWebPurchases>3,]),300,p=0.5)
prop.test(nrow(data_sample[data_sample$NumWebPurchases>3,]),300,p=0.5)
prop.test(nrow(data_sample[data_sample$NumStorePurchases>5,]),300,p=0.5)
knitr::opts_chunk$set(echo = TRUE)
ggplot(data_sample, aes(data_sample$Education, data_sample$Income, color=data_sample$Education)) +
geom_point() +
theme_dark()
library(ggplot2)
ggplot(data_sample, aes(data_sample$Education, data_sample$Income, color=data_sample$Education)) +
geom_point() +
theme_dark()
ggplot(data_sample, aes(data_sample$Education, data_sample$Income, color=data_sample$Education)) +
geom_point() +
theme_bw()
ggplot(data_sample, aes(data_sample$Education, data_sample$Income, color=data_sample$Education)) +
geom_point() +
theme_classic()
ggplot(data_sample, aes(data_sample$Education, data_sample$Income, color=data_sample$Education)) +
geom_point() +
theme_bw()
ggplot(data_sample, aes(data_sample$Education, data_sample$Income, color=data_sample$Education)) +
geom_point() +
theme_bw() +
geom_text(x="Education", y="Income")
ggplot(data_sample, aes(data_sample$Education, data_sample$Income, color=data_sample$Education)) +
geom_point() +
theme_bw() + geom_text(aes(label = replace(data_sample$Education, data_sample$Income == "Education", "Income")))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
ggplot(data_sample, aes(data_sample$Education, data_sample$Income, color=data_sample$Education)) +
geom_point() +
theme_bw() +
labs(title = "Yıllara göre gelir düzeyindeki değişim",
x = "yıllar",
y = "gelirler")
ggplot(data_sample, aes(data_sample$Education, data_sample$Income, color=data_sample$Education)) +
geom_point() +
theme_bw() +
labs(title = "Income change by education level ",
x = "Education",
y = "Incomes")
ggplot(data_sample, aes(data_sample$Education, data_sample$Income, color=data_sample$Education)) +
geom_point() +
theme_bw() +
labs(title = "Income change by education level ",
x = "Education",
y = "Incomes")
attach(data_sample)
attach(data_sample)
ggplot(data_sample, aes(Education, Income, color=Education)) +
geom_point() +
theme_bw() +
labs(title = "Income change by education level ",
x = "Education",
y = "Incomes")
detach(data_sample)
attach(data_sample)
ggplot(data_sample, aes(Education, Income, color=Education)) +
geom_point() +
theme_bw() +
labs(title = "Income change by education level ",
x = "Education",
y = "Incomes")
attach(data_sample)
ggplot(data_sample, aes(Marital_St,Income)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(Income,na.rm=T), ymax=max(Income,na.rm=T)), width=.2)
library(ggplot2)
attach(data_sample)
ggplot(data_sample, aes(Marital_St,Income)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(Income,na.rm=T), ymax=max(Income,na.rm=T)), width=.2)
#10.11:
attach(data_sample)
ggplot(data_sample, aes(Marital_St,Income)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(Income,na.rm=T), ymax=max(Income,na.rm=T)), width=.2)
ggplot(data_sample, aes(data_sample$Education,data_sample$Income)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(data_sample$Income,na.rm=T), ymax=max(data_sample$Income,na.rm=T)), width=.2)
ggplot(data_sample, aes(data_sample$Education,data_sample$MntGoldProds)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(data_sample$Income,na.rm=T), ymax=max(data_sample$Income,na.rm=T)), width=.2)
ggplot(data_sample, aes(data_sample$Kid_Status,data_sample$MntSweetProducts)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(data_sample$Income,na.rm=T), ymax=max(data_sample$Income,na.rm=T)), width=.2)
ggplot(data_sample, aes(data_sample$Kid_Status,data_sample$Income)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(data_sample$Income,na.rm=T), ymax=max(data_sample$Income,na.rm=T)), width=.2)
ggplot(data_sample, aes(data_sample$Kid_Status,data_sample$Income)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=mean(data_sample$Income,na.rm=T), ymax=mean(data_sample$Income,na.rm=T)), width=.2)
ggplot(data_sample, aes(data_sample$Kid_Status,data_sample$MntSweetProducts)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=mean(data_sample$Income,na.rm=T), ymax=mean(data_sample$Income,na.rm=T)), width=.2)
View(data_sample)
#10.11:
detach(data_sample)
data_sample_sing_mar <- data_sample %>%
filter(Marital_Status %in% c("Single", "Married"))
library(dplyr)  #verileri manipüle edebilmek için kullandık
data_sample_sing_mar <- data_sample %>%
filter(Marital_Status %in% c("Single", "Married"))
ggplot(data_sample_sing_mar, aes(data_sample_sing_mar$Marital_Status,data_sample_sing_mar$Income)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(data_sample$Income,na.rm=T), ymax=max(data_sample_sing_mar$Income,na.rm=T)), width=.2)
ggplot(data_sample_sing_mar, aes(data_sample_sing_mar$Marital_Status,data_sample_sing_mar$Kid_Status)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(data_sample$Kid_Status,na.rm=T), ymax=max(data_sample_sing_mar$Kid_Status,na.rm=T)), width=.2)
rm(data_sample_sing_mar)
ggplot(data_sample, aes(data_sample$MntWines,data_sample$MntFruits)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(data_sample$MntFruits,na.rm=T), ymax=max(data_sample$MntFruits,na.rm=T)), width=.2)
ggplot(data_sample, aes(data_sample$Education,data_sample$Income)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(data_sample$Education,na.rm=T), ymax=max(data_sample$Income a.rm=T)), width=.2)
ggplot(data_sample, aes(data_sample$Education,data_sample$Income)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(data_sample$Education,na.rm=T), ymax=max(data_sample$Income na.rm=T)), width=.2)
#10.11:
ggplot(data_sample, aes(data_sample$Education,data_sample$Income)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(data_sample$Education,na.rm=T), ymax=max(data_sample$Income,na.rm=T)), width=.2)
ggplot(data_sample, aes(data_sample$Education,data_sample$Income)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(data_sample$Education,na.rm=T), ymax=max(data_sample$Income,na.rm=T)), width=.2)
#10.11:
ggplot(data_sample, aes(data_sample$Education,data_sample$Income)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(data_sample$Income,na.rm=T), ymax=max(data_sample$Education,na.rm=T)), width=.2)
#10.11:
ggplot(data_sample, aes(data_sample$MntWines,data_sample$MntFruits)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(data_sample$MntWines,na.rm=T), ymax=max(data_sample$MntFruits,na.rm=T)), width=.2)
ggplot(data_sample, aes(data_sample$Income data_sample$Education)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(data_sample$Income,na.rm=T), ymax=max(data_sample$Education,na.rm=T)), width=.2)
#10.11:
ggplot(data_sample, aes(data_sample$Education,data_sample$Income)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(data_sample$Income,na.rm=T), ymax=max(data_sample$Income,na.rm=T)), width=.2)
View(data_sample)
View(data_sample)
ggplot(data_sample, aes(data_sample$Education,data_sample$Income)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(data_sample$Income,na.rm=T), ymax=max(data_sample$Income,na.rm=T)), width=.2) +
scale_y_sqrt()
ggplot(data_sample, aes(data_sample$Education,data_sample$Income, fill=data_sample$Education)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(data_sample$Income,na.rm=T), ymax=max(data_sample$Income,na.rm=
ggplot(data_sample, aes(data_sample$Education,data_sample$Income, fill=data_sample$Education)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(data_sample$Income,na.rm=T), ymax=max(data_sample$Income,na.rm=T)), width=.2)
ggplot(data_sample, aes(data_sample$Education,data_sample$Income, fill=data_sample$Education)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(data_sample$Income,na.rm=T), ymax=max(data_sample$Income,na.rm=T)), width=.2)
ggplot(data_sample, aes(data_sample$Education, data_sample$Income, color = data_sample$Education)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(data_sample$Income,na.rm=T), ymax=max(data_sample$Income,na.rm=T)), width=.2)
ggplot(data_sample, aes(data_sample$Education, data_sample$Income, fill = data_sample$Education)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(data_sample$Income,na.rm=T), ymax=max(data_sample$Income,na.rm=T)), width=.2)
ggplot(data_sample, aes(data_sample$Education,data_sample$Income)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(data_sample$Income,na.rm=T), ymax=max(data_sample$Income,na.rm=T)), width=.2)
View(data_sample)
ggplot(data_sample, aes(data_sample$Kit_Status,data_sample$MntMeatProducts)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(data_sample$MntMeatProducts,na.rm=T), ymax=max(data_sample$MntMeatProducts,na.rm=T)), width=.2)
ggplot(data_sample, aes(data_sample$Kid_Status,data_sample$MntMeatProducts)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(data_sample$MntMeatProducts,na.rm=T), ymax=max(data_sample$MntMeatProducts,na.rm=T)), width=.2)
ggplot(data_sample, aes(data_sample$Education,data_sample$Income)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=min(data_sample$Income,na.rm=T), ymax=max(data_sample$Income,na.rm=T)), width=.2)
#10.13:
attach(data_sample)
attach(data_sample)
ggplot(data_sample aes(Year_Birth, NumWebPurchases)) +
geom_line()
ggplot(data_sample, aes(Year_Birth, NumWebPurchases)) +
geom_line()
ggplot(data_sample, aes(Education, NumWebPurchases)) +
geom_line()
ggplot(data_sample, aes(Income, MntMeatProducts)) +
geom_line()
View(data_sample)
View(data_sample)
dat1<-data_sample %>%
summarize(year=Year_Birth, edu=Education)
dat2 <- data_sample %>%
sumamrize(year=Year_Birth, Income=Income)
dat2 <- data_sample %>%
summarize(year=Year_Birth, Income=Income)
ggplot() +
geom_line(data = dat1, aes(dat1$year, dat1$edu)) +
geom_line(data = dat2, aes(dat1$year, dat2$Income))
dat1<-data_sample %>%
summarize(Income=Income, pur=NumStorePurchases)
dat2 <- data_sample %>%
summarize(Income=Income, pur=NumWebPurchases)
ggplot() +
geom_line(data = dat1, aes(dat1$Income, dat1$pur)) +
geom_line(data = dat2, aes(dat1$Income, dat2$pur))
ggplot() +
geom_line(data = dat1, aes(dat1$Income, dat1$pur, color=pur)) +
geom_line(data = dat2, aes(dat1$Income, dat2$pur, color=pur))
ggplot() +
geom_line(data = dat1, aes(dat1$Income, dat1$pur, color="red")) +
geom_line(data = dat2, aes(dat1$Income, dat2$pur, color="blue"))
ggplot() +
geom_line(data = dat1, aes(dat1$Income, dat1$pur, color="red")) +
geom_line(data = dat2, aes(dat1$Income, dat2$pur, color="blue"))
ggplot() +
geom_line(data = dat1, aes(dat1$Income, dat1$pur, color="red")) +
geom_line(data = dat2, aes(dat1$Income, dat2$pur, color="blue"))
ggplot() +
geom_line(data = dat1, aes(dat1$Income, dat1$pur, color="red")) +
geom_line(data = dat2, aes(dat1$Income, dat2$pur, color="blue"))
#10.16:
ggplot(data_sample, aes(data_sample$Kidhome, data_sample$MntSweetProducts)) + geom_point()
#10.16:
ggplot(data_sample, aes(data_sample$MntFruits, data_sample$MntSweetProducts)) + geom_point()
#10.16:
ggplot(data_sample, aes(data_sample$MntFruits, data_sample$MntWines)) + geom_point()
Kidhome
#10.16:
ggplot(data_sample, aes(data_sample$Kidhome, data_sample$MntSweetProducts)) + geom_point()
#10.16:
ggplot(data_sample, aes(data_sample$MntFruits, data_sample$MntWines)) + geom_point()
#10.16:
ggplot(data_sample, aes(data_sample$Income, data_sample$MntMeatProducts)) + geom_point()
ggplot(data_sample, aes(data_sample$Income, data_sample$MntMeatProducts)) + geom_point() +
geom_vline(
xintercept = 10,
color = "red",
linetype = "dashed",
size = 1.5
) +
geom_hline(yintercept = 0, color = "blue")
ggplot(data_sample, aes(data_sample$Income, data_sample$MntMeatProducts)) + geom_point() +
geom_vline(
xintercept = 10,
color = "red",
linetype = "dashed",
size = 1.5
) +
geom_hline(yintercept = 0, color = "blue")
ggplot(data_sample, aes(data_sample$Income, data_sample$MntMeatProducts)) + geom_point() +
geom_vline(
xintercept = mean(data_sample$Income , na.rm=T),
color = "red",
linetype = "dashed",
size = 1.5
) +
geom_hline(yintercept = mean(data_sample$MntMeatProducts, na.rm=T), color = "blue")
ggplot(data_sample) +
aes(y = Income) +
geom_boxplot()
ggplot(data_sample) +
aes(y = Income) +
geom_boxplot() + theme_dar()
ggplot(data_sample) +
aes(y = Income) +
geom_boxplot() + theme_dark()
ggplot(data_sample) +
aes(y = Income color = "red") +
geom_boxplot() + theme_dark()
ggplot(data_sample) +
aes(y = Income, color = "red") +
geom_boxplot() + theme_dark()
ggplot(data_sample) +
aes(y = Income, fill = "red") +
geom_boxplot() + theme_dark()
ggplot(data_sample) +
aes(x=Marital_Status,y = Income, color = "green") +
geom_boxplot() + theme_bw()
ggplot(data_sample) +
aes(x=Marital_Status,y = Income, color = "green", fill="yellow") +
geom_boxplot() + theme_bw()
ggplot(data_sample) +
aes(x=Marital_Status,y = Income, color = "green", fill="yellow") +
geom_boxplot()
ggplot(data_sample) +
aes(x=Marital_Status,y = Income, color = "green") +
geom_boxplot() + theme_bw()
ggplot(data_sample) +
aes(x=Marital_Status,y = Income) +
geom_boxplot() + theme_bw()
ggplot(data_sample) +
aes(x=Marital_Status,y = Income) +
geom_boxplot() + theme_bw(aes(color="green"))
ggplot(data_sample) +
aes(x=Marital_Status,y = Income, colorRampPalette("Red"))) +
geom_boxplot() + theme_bw()
ggplot(data_sample) +
aes(x=Marital_Status,y = Income, colorRampPalette("red"))) +
geom_boxplot() + theme_bw()
ggplot(data_sample) +
aes(x=Marital_Status,y = Income, fill="#214A2")) +
geom_boxplot() + theme_bw()
ggplot(data_sample) +
aes(x=Marital_Status,y = Income, color="#214A2")) +
geom_boxplot() + theme_bw()
ggplot(data_sample) +
aes(x=Marital_Status,y = Income, color="red")) +
geom_boxplot() + theme_bw()
ggplot(data_sample) +
aes(x=Marital_Status, y = Income, color="red") +
geom_boxplot() + theme_bw()
ggplot(data_sample) +
aes(x = Year_Birth) +
geom_histogram(aes(y = Education), bins = 21) +
geom_density()
ggplot(data_sample) +
aes(x = Education) +
geom_histogram(aes(y = MntSweetProducts), bins = 21) +
geom_density()
ggplot(data_sample, aes(Marital_Status, Income, fill=Marital_Status)) +
geom_histogram(aes(y = MntSweetProducts), bins = 21) +
geom_density()
ggplot(data_sample, aes(Marital_Status, Income, fill=Marital_Status)) +
geom_histogram() +
geom_density()
ggplot() +
aes(x = Marital_Status) +
geom_histogram(aes(y = Income), bins = 10) +
geom_density()
ggplot() +
aes(x = Marital_Status) +
geom_histogram(aes(y = Income)) +
geom_density()
#10.20:
ggplot(data_sample, aes(data_sample$Marital_Status, data_sample$Income))+ geom_point()+geom_density()
#10.20:
ggplot(data_sample, aes(data_sample$Year_Birth, data_sample$Income))+ geom_point()+geom_density()
#10.20:
ggplot(data_sample, aes(data_sample$Income, data_sample$MntWines))+ geom_point()+geom_density()
#10.20:
ggplot(data_sample, aes(data_sample$Income, data_sample$MntGoldProds))+ geom_point()+geom_density()
#10.20:
ggplot(data_sample, aes(data_sample$Education, data_sample$Income))+ geom_histogram()+geom_density()
ggplot(data_sample, aes(Income, MntMeatProducts)) +
geom_line()
ggplot(data_sample, aes(Income, MntMeatProducts)) +
geom_histogram()
ggplot(data_sample, aes(Income, MntMeatProducts)) +
geom_line() + geom_density()
